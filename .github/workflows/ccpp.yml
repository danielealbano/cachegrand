name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  CCACHE_VERSION: 3.7.7

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest",
            os: windows-latest,
            triplet: x64-windows,
            cc: "gcc",
            cxx: "g++"
          }
        - {
            name: "Ubuntu Latest",
            os: ubuntu-latest,
            triplet: x64-linux,
            cc: "gcc",
            cxx: "g++"
          }

    env:
      CCACHE_DIR: ${{ runner.workspace }}/.ccache
      CCACHE_COMPRESS: true
      CCACHE_COMPRESSLEVEL: 6
      CCACHE_MAXISZE: 400M
      PATH: ${{ github.workspace }}:${{ env.PATH }}

    steps:
    - name: Setup cmake
      uses: lukka/get-cmake@latest

    - name: Setup ccache
      shell: cmake -P {0}
      run: |
        set(ccache_url "https://github.com/cristianadam/ccache/releases/download/v$ENV{CCACHE_VERSION}/$ENV{RUNNER_OS}.tar.xz")
        file(DOWNLOAD "${ccache_url}" ./ccache.tar.xz SHOW_PROGRESS)
        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./ccache.tar.xz)
        if (NOT "${{ runner.os }}" STREQUAL "Windows")
          execute_process(COMMAND ${CMAKE_COMMAND} -E chmod +x ./ccache)
        endif()

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")

    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: ${ { matrix.config.name } }-ccache-${ { steps.ccache_cache_timestamp.outputs.timestamp } }
        restore-keys: |
          ${ { matrix.config.name } }-ccache-

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$ENV{BUILD_TYPE} -DBUILD_TESTS=1 -DBUILD_BENCHES=1 -G "Unix Makefiles"

    - name: Build All
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . -- -j 4

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest
