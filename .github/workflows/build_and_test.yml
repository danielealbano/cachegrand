name: Build & Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu Latest",
            os: ubuntu-latest,
            triplet: x64-linux,
            cc: "gcc",
            cxx: "g++"
          }

    steps:
    - name: Setup cmake
      uses: lukka/get-cmake@latest

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCACHEGRAND_BUILD_TESTS=1 -DCACHEGRAND_BUILD_BENCHES=1 -G "Unix Makefiles"

    - name: Build All
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --target cachegrand-tests -- -j 4

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: tests/cachegrand-tests

    - name: Generate and upload Code Coverage to codecov.io
      env:
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
        name: cachegrand-tests
        fail_ci_if_error: true
